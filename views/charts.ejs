<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ApexCharts Example</title>
    <!-- Include the ApexCharts library -->
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
</head>
<body>
<nav>
    <div class="nav-wrapper">
        <div class="container">
            <a href="#" class="brand-logo">Logo</a>
            <a href="#" data-target="mobile-demo" class="sidenav-trigger"><i class="material-icons">menu</i></a>
            <ul class="right hide-on-med-and-down">
                <li><a href="/animals" class="animals">Animals game</a></li>
                <li><a href="/thesaurus" class="thesaurus">Thesaurus game</a></li>
                <li><a href="/charts" class="dropdown-trigger charts" data-target="dropdown1">Charts</a></li>
                <li><a href="/admin" class = "admin">Admin</a></li>
                <li><a href="/pdfpage" class="download-trigger pdfdownload">PDF Download</a></li>
                <li><a href="/main" class="download-trigger main">Main</a></li>
                <li><a href="/history" class="history-trigger history">History</a></li>
                <li><a href="/translate" class = "translate">Translate</a></li>
                <li><a href="/" class = "login">Login</a></li>
            </ul>
        </div>
    </div>
</nav>
<div class="row"
     style="display: flex; flex-display:column;align-items: center; justify-content: center; max-width: 1200px;">
    <div style="width: 547px;">
        <h2><%= translate.historyList %></h2>
        <div id="historyData"></div>
    </div>
    <div style="width: 547px;">
        <h2>Что вы искали</h2>
        <div id="count"></div>
    </div>
    <div style="width: 547px;">
        <h2><%= translate.stat %></h2>
        <div id="commonData"></div>
    </div>
    <div style="width: 547px;">
        <h2>Количество пользователей</h2>
        <div id="users"></div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const elems = document.querySelectorAll('.sidenav');


        if (JSON.parse(localStorage.getItem("user")).isAdmin == false) {
            document.querySelector(".admin").remove()
        }
        document.querySelector(".charts").addEventListener("click", () => {
            window.location.href = "/charts/" + JSON.parse(localStorage.getItem("user"))._id
        })
        document.querySelector(".download").addEventListener("click", () => {
            console.log("click")
            window.location.href = "/pdfdownload/" + JSON.parse(localStorage.getItem("user"))._id
        })
        document.querySelector(".history").addEventListener("click", () => {
            window.location.href = "/history/" + JSON.parse(localStorage.getItem("user"))._id
        })
        let usersData = '<%- JSON.stringify(users) %>'
        usersData = JSON.parse(usersData)
        console.log(usersData)

        let history = '<%- JSON.stringify(history) %>'
        history = JSON.parse(history).history
        console.log(history)
        const options = {
            chart: {
                type: 'bar'
            },
            series: [{
                name: 'Sales',
                data: [30, 40, 35, 50, 49, 60, 70, 91, 125]
            }],
            xaxis: {
                categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']
            }
        };

        const historyData = new ApexCharts(document.querySelector("#historyData"), {
            chart: {
                type: 'pie'
            },
            labels: ["Количество запросов"],
            series: [history.length]
        });

        const commonData = new ApexCharts(document.querySelector("#commonData"), {
            series: [history.filter((item) => {
                return item.type == "auth"
            }).length, history.filter((item) => {
                return item.type == "animals"
            }).length, history.filter((item) => {
                return item.type == "thesaurus"
            }).length, history.filter((item) => {
                return item.type == "pdfdownload"
            }).length, history.filter((item) => {
                return item.type == "edit"
            }).length],
            chart: {
                width: 380,
                type: 'pie',
            },
            labels: ["Авторизаций", "Сколько раз я искали животных", "Сколько раз я искали словали", "Скачиваний", "Редактирований"],
            responsive: [{
                breakpoint: 480,
                options: {
                    chart: {
                        width: 200
                    },
                    legend: {
                        position: 'bottom'
                    }
                }
            }]
        });

        // Extract unique prompts and their counts
        const promptCounts = history.reduce((accumulator, currentItem) => {
            accumulator[currentItem.prompt] = (accumulator[currentItem.prompt] || 0) + 1;
            return accumulator;
        }, {});

        const uniquePrompts = Object.keys(promptCounts);
        const count = new ApexCharts(document.querySelector("#count"), {
            chart: {
                type: 'area'
            },
            xaxis: {
                categories: uniquePrompts
            },
            series: [{
                name: 'Count',
                data: uniquePrompts.map(prompt => promptCounts[prompt])
            }]
        });

        const users = new ApexCharts(document.querySelector("#users"), {
            chart: {
                type: 'pie'
            },
            labels: ["Администраторов", "Пользователей"],
            series: [usersData.filter((item) => {
                return item.isAdmin
            }).length, usersData.filter((item) => {
                return !item.isAdmin
            }).length,]
        });

        const countryCount = new ApexCharts(document.querySelector("#countryCount"), {
            chart: {
                type: 'pie'
            },
            series: [history.filter((item) => {
                return item.type == "country"
            }).length]
        });

        const historyCount = new ApexCharts(document.querySelector("#historyCount"), {
            chart: {
                type: 'pie'
            },
            series: [history.filter((item) => {
                return item.type == "history"
            }).length]
        });

        historyData.render();
        commonData.render();
        count.render();
        users.render();
        countryCount.render();
        historyCount.render();
    });
</script>
</body>
</html>