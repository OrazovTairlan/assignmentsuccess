<!DOCTYPE html>
<html>
<head>
    <title>Admin Page</title>







    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">

    <!-- Compiled and minified JavaScript -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
</head>
<body>
<nav>
    <div class="nav-wrapper">
        <div class="container">
            <a href="#" class="brand-logo">Logo</a>
            <a href="#" data-target="mobile-demo" class="sidenav-trigger"><i class="material-icons">menu</i></a>
            <ul class="right hide-on-med-and-down">
                <li><a href="/animals" class="animals">Animals game</a></li>
                <li><a href="/thesaurus" class="thesaurus">Thesaurus game</a></li>
                <li><a href="/charts" class="dropdown-trigger charts" data-target="dropdown1">Charts</a></li>
                <li><a href="/admin" class = "admin">Admin</a></li>
                <li><a href="/pdfpage" class="download-trigger pdfdownload">PDF Download</a></li>
                <li><a href="/main" class="download-trigger main">Main</a></li>
                <li><a href="/history" class="history-trigger history">History</a></li>
                <li><a href="/translate" class = "translate">Translate</a></li>
                <li><a href="/" class = "login">Login</a></li>
            </ul>
        </div>
    </div>
</nav>

<!-- Dropdown Structure -->
<ul id="dropdown1" class="dropdown-content">
    <li><a href="#!">Option 1</a></li>
    <li><a href="#!">Option 2</a></li>
    <li><a href="#!">Option 3</a></li>
</ul>

<ul class="sidenav" id="mobile-demo">
    <li><a href="/animals">Animals game</a></li>
    <li><a href="/thesaurus">Thesaurus game</a></li>
    <li><a href="/admin">Admin</a></li>
    <li><a href="#" class="download-trigger">PDF Download</a></li>
    <li><a href="#" class="history-trigger">History</a></li>
    <li><a href="/translate">Translate</a></li>
    <li><a href="/">Login</a></li>
</ul>

<div class="container mt-5">
    <h1 class="mb-4">User Management</h1>
    <div class="row">
        <div class="col s12">
            <table class="striped">
                <thead>
                <tr>
                    <th>User ID</th>
                    <th>Username</th>
                    <th>Creation Date</th>
                    <th>Admin</th>
                    <th>Actions</th>
                </tr>
                </thead>
                <tbody>
                <% users.forEach(user => { %>
                    <tr>
                        <td><%= user._id %></td>
                        <td><%= user.username %></td>
                        <td><%= user.creationDate %></td>
                        <td><%= user.isAdmin %></td>
                        <td>
                            <button type="button" data-edit="<%= JSON.stringify(user) %>" class="btn btn-small blue lighten-1 edit modal-trigger" data-target="editModal">Edit</button>
                            <button type="button" data-edit="<%= JSON.stringify(user) %>" class="btn btn-small red lighten-1 delete">Delete</button>
                        </td>
                    </tr>
                <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <h5>Edit User</h5>
            <div class="input-field">
                <input type="text" class="validate username-edit">
                <label for="username-edit">Username</label>
            </div>
            <div class="input-field">
                <input type="password" class="validate username-password">
                <label for="username-password">Password</label>
            </div>
            <p>
                <label>
                    <input type="checkbox" class="filled-in edit-admin" />
                    <span>Admin</span>
                </label>
            </p>
        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
            <a href="#!" class="modal-close waves-effect waves-green btn blue lighten-1 edit-submit">Save Changes</a>
        </div>
    </div>

    <!-- Create Modal -->
    <div id="createModal" class="modal">
        <div class="modal-content">
            <h5>Create User</h5>
            <div class="input-field">
                <input type="text" class="validate create-username">
                <label for="create-username">Username</label>
            </div>
            <div class="input-field">
                <input type="password" class="validate create-password">
                <label for="create-password">Password</label>
            </div>
            <p>
                <label>
                    <input type="checkbox" class="filled-in create-admin" />
                    <span>Admin</span>
                </label>
            </p>
        </div>
        <div class="modal-footer">
            <a href="#!" class="modal-close waves-effect waves-green btn-flat">Close</a>
            <a href="#!" class="modal-close waves-effect waves-green btn blue lighten-1 create-submit">Create User</a>
        </div>
    </div>

    <a class="btn-floating create-btn btn-large waves-effect waves-light green modal-trigger" href="#createModal"><i class="material-icons">add</i></a>
</div>

<div class="container mt-5">
    <h1 class="mb-4">Item Management</h1>
    <div class="row">
        <div class="col s12">
            <table class="striped">
                <thead>
                <tr>
                    <th>Name of news</th>
                    <th>Description of news</th>
                    <th>First image</th>
                    <th>Second image</th>
                    <th>Three image</th>
                </tr>
                </thead>
                <tbody>
                <% items.forEach(user => { %>
                    <tr>
                        <td><%= user.name[activeLanguage] %></td>
                        <td><%= user.description[activeLanguage] %></td>
                        <td><img src = "<%= user.images[0] %>" style = "width: 297px; height: 297px"/></td>
                        <td><img src = "<%= user.images[1] %>" style = "width: 297px; height: 297px"/></td>
                        <td><img src = "<%= user.images[2] %>" style = "width: 297px; height: 297px"/></td>
                        <td>
                            <button type="button" data-edit="<%= JSON.stringify(user) %>" class="btn btn-small blue lighten-1 edit-item modal-trigger" data-target="editItems">Edit</button>
                            <button type="button" data-edit="<%= JSON.stringify(user) %>" class="btn btn-small red lighten-1 delete-item delete">Delete</button>
                        </td>
                    </tr>
                <% }); %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editItems" class="modal">
        <div class="modal-content">
            <h5>Edit Item</h5>
            <div class="input-field">
                <input type="text" class="validate kazakh-name">
                <label for="kazakh-name">Kazakh Name</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate english-name">
                <label for="english-name">English Name</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate kazakh-description">
                <label for="kazakh-description">Kazakh Description</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate english-description">
                <label for="english-description">English Description</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate image-first">
                <label for="image-first">Image First</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate image-second">
                <label for="image-second">Image Second</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate image-three">
                <label for="image-three">Image Three</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate date-create">
                <label for="date-create">Date of Creation</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate date-update">
                <label for="date-update">Date of Update</label>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-flat waves-effect waves-light" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary edit-item-submit create-submit">Create Item</button>
        </div>
    </div>

    <!-- Create Modal -->
    <div id="addItems" class="modal addItems">
        <div class="modal-content">
            <h5>Create Item</h5>
            <div class="input-field">
                <input type="text" class="validate kazakh-name">
                <label for="kazakh-name">Kazakh Name</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate english-name">
                <label for="english-name">English Name</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate kazakh-description">
                <label for="kazakh-description">Kazakh Description</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate english-description">
                <label for="english-description">English Description</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate image-first">
                <label for="image-first">Image First</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate image-second">
                <label for="image-second">Image Second</label>
            </div>
            <div class="input-field">
                <input type="text" class="validate image-three">
                <label for="image-three">Image Three</label>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-flat waves-effect waves-light" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-primary create-item-submit create-submit">Create Item</button>
        </div>
    </div>

    <a class="btn-floating create-btn create-item btn-large waves-effect waves-light green modal-trigger" href="#addItems"><i class="material-icons">add</i></a>
</div>


</body>

<script>
    document.querySelector(".charts").addEventListener("click", () => {
        window.location.href = "/charts/" + JSON.parse(localStorage.getItem("user"))._id
    })
    document.querySelector(".pdfdownload").addEventListener("click", () => {
        console.log("click")
        window.location.href = "/pdfdownload/" + JSON.parse(localStorage.getItem("user"))._id
    })
    document.querySelector(".history").addEventListener("click", () => {
        window.location.href = "/history/" + JSON.parse(localStorage.getItem("user"))._id
    })
    let a = '<%- JSON.stringify(users) %>';

    let checked = false
    document.addEventListener('DOMContentLoaded', function() {
        var modals = document.querySelectorAll('.modal');
        M.Modal.init(modals);
    });
    console.log(a)
    console.log(JSON.parse(a))
    for (let i = 0; i < Array.from(document.querySelectorAll(".edit")).length; i++) {
        Array.from(document.querySelectorAll(".edit"))[i].addEventListener("click", async (event) => {



            console.log("click")
            let editModal = M.Modal.getInstance(document.getElementById("editModal"))
            editModal.open()
            console.log(JSON.parse(event.target.dataset.edit))
            console.log(event.target.closest("tr"))
            const input = document.querySelector(".username-edit").value = JSON.parse(event.target.dataset.edit).username
            const password = document.querySelector(".username-password").value = JSON.parse(event.target.dataset.edit).password
            document.querySelector(".edit-submit").addEventListener("click", async () => {
                const options = {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        id: JSON.parse(event.target.dataset.edit)._id,
                        password: document.querySelector(".username-password").value,
                        username: document.querySelector(".username-edit").value,
                        isAdmin: document.querySelector(".edit-admin").checked
                    }) // Convert JavaScript object to JSON string
                };

                // Make the fetch request
                fetch("/admin", options)
                    .then(response => {
                        location.reload();
                    })
            })


            document.querySelector(".edit-admin").addEventListener("change", (event) => {
                console.log(event.target.checked)
                checked = event.target.checked
            })
        })
    }
    for (let i = 0; i < Array.from(document.querySelectorAll(".edit-item")).length; i++) {
        Array.from(document.querySelectorAll(".edit-item"))[i].addEventListener("click", async (event) => {
            console.log("click edit")
            document.querySelector(".kazakh-name").value = JSON.parse(event.target.dataset.edit).name.kz
            document.querySelector(".english-name").value = JSON.parse(event.target.dataset.edit).name.en
            document.querySelector(".kazakh-description").value = JSON.parse(event.target.dataset.edit).description.kz
            document.querySelector(".english-description").value = JSON.parse(event.target.dataset.edit).description.en
            document.querySelector(".image-first").value = JSON.parse(event.target.dataset.edit).images[0]
            document.querySelector(".image-second").value = JSON.parse(event.target.dataset.edit).images[1]
            document.querySelector(".image-three").value = JSON.parse(event.target.dataset.edit).images[2]
            document.querySelector(".date-create").value = JSON.parse(event.target.dataset.edit).createdAt,
            document.querySelector(".date-update").value = JSON.parse(event.target.dataset.edit).updatedAt,
            console.log(JSON.parse(event.target.dataset.edit))
            console.log(event.target.closest("tr"))
            document.querySelector(".edit-item-submit").addEventListener("click", async () => {
                const options = {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        id: JSON.parse(event.target.dataset.edit)._id,
                        kazakhName: document.querySelector(".kazakh-name").value,
                        englishName: document.querySelector(".english-name").value,
                        kazakhDescription: document.querySelector(".kazakh-description").value,
                        englishDescription: document.querySelector(".english-description").value,
                        imageFirst: document.querySelector(".image-first").value,
                        imageSecond: document.querySelector(".image-second").value,
                        imageThree: document.querySelector(".image-three").value,
                        dateCreation: document.querySelector(".date-create").value,
                        dateUpdate: document.querySelector(".date-update").value
                    }) // Convert JavaScript object to JSON string
                };

                // Make the fetch request
                fetch("/update-item", options)
                    .then(response => {
                        /*location.reload();*/
                    })
            })


            document.querySelector(".edit-admin").addEventListener("change", (event) => {
                console.log(event.target.checked)
                checked = event.target.checked
            })
        })
    }
    for (let i = 0; i < Array.from(document.querySelectorAll(".delete")).length; i++) {
        Array.from(document.querySelectorAll(".delete"))[i].addEventListener("click", async (event) => {
            console.log(JSON.parse(event.target.dataset.edit))
            const options = {
                method: 'delete',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: JSON.parse(event.target.dataset.edit)._id,
                }) // Convert JavaScript object to JSON string
            };

            // Make the fetch request
            fetch("/admin", options)
                .then(response => {
                    location.reload();

                })
        })
    }

    for (let i = 0; i < Array.from(document.querySelectorAll(".delete-item")).length; i++) {
        Array.from(document.querySelectorAll(".delete-item"))[i].addEventListener("click", async (event) => {
            const options = {
                method: 'delete',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    id: JSON.parse(event.target.dataset.edit)._id,
                }) // Convert JavaScript object to JSON string
            };

            // Make the fetch request
            fetch("/delete-item", options)
                .then(response => {
                    location.reload();

                })
        })
    }


    document.querySelector(".create-item").addEventListener("click", async () => {
        console.log("click")
        const addItems = document.querySelector(".addItems")

        addItems.querySelector(".create-item-submit").addEventListener("click", async () => {
            const options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    kazakhName: addItems.querySelector(".kazakh-name").value,
                    englishName: addItems.querySelector(".english-name").value,
                    kazakhDescription: addItems.querySelector(".kazakh-description").value,
                    englishDescription: addItems.querySelector(".english-description").value,
                    imageFirst: addItems.querySelector(".image-first").value,
                    imageSecond: addItems.querySelector(".image-second").value,
                    imageThree: addItems.querySelector(".image-three").value,
                    /*dateCreation: addItems.querySelector(".date-create").value,
                    dateUpdate: addItems.querySelector(".date-update").value*/
                })
            };
            fetch("/create-item", options).then((response) => {
                /*location.reload()*/
            })
        })
    })
    document.querySelector(".create-btn").addEventListener("click", async () => {
        const input = document.querySelector(".create-username")
        const password = document.querySelector(".create-password")
        let checked = false
        document.querySelector(".create-admin").addEventListener("change", (event) => {
            checked = event.target.checked
            console.log(checked)
        })


        document.querySelector(".create-submit").addEventListener("click", async () => {
            console.log("click")
            const options = {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    password: document.querySelector(".create-password").value,
                    username: document.querySelector(".create-username").value,
                    isAdmin: document.querySelector(".create-admin").checked
                })
            };
            fetch("/create-user", options).then((response) => {
                location.reload()
            })
        })
    })
</script>
</html>
